- args:
    sql: CREATE EXTENSION IF NOT EXISTS pgcrypto;
  type: run_sql
- args:
    sql: "CREATE TABLE \"staging\".\"tags\"(\"id\" uuid NOT NULL DEFAULT gen_random_uuid(),
      \"guild\" text NOT NULL, \"user\" text NOT NULL, \"name\" text NOT NULL,
      \"aliases\" text[] NOT NULL DEFAULT '{}', \"content\" text NOT NULL, \"hoisted\" boolean DEFAULT false,
      \"uses\" integer NOT NULL DEFAULT 0, \"last_modified\" text, \"created_at\"
      timestamptz NOT NULL DEFAULT now(), \"updated_at\" timestamptz NOT NULL DEFAULT
      now(), PRIMARY KEY (\"id\") , UNIQUE (\"guild\", \"name\"));\nCREATE OR REPLACE
      FUNCTION \"staging\".\"set_current_timestamp_updated_at\"()\nRETURNS TRIGGER
      AS $$\nDECLARE\n  _new record;\nBEGIN\n  _new := NEW;\n  _new.\"updated_at\"
      = NOW();\n  RETURN _new;\nEND;\n$$ LANGUAGE plpgsql;\nCREATE TRIGGER \"set_staging_tags_updated_at\"\nBEFORE
      UPDATE ON \"staging\".\"tags\"\nFOR EACH ROW\nEXECUTE PROCEDURE \"staging\".\"set_current_timestamp_updated_at\"();\nCOMMENT
      ON TRIGGER \"set_staging_tags_updated_at\" ON \"staging\".\"tags\" \nIS 'trigger
      to set value of column \"updated_at\" to current timestamp on row update';\n"
  type: run_sql
- args:
    name: tags
    schema: staging
  type: add_existing_table_or_view
