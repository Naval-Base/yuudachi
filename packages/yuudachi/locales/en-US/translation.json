{
	"common": {
		"errors": {
			"no_mod_log_channel": "No mod log channel has been initialized yet.",
			"no_anti_raid_archive_channel": "No anti-raid archive channel has been initialized yet.",
			"no_content": "<No message content>"
		},
		"moderator": "Moderator"
	},
	"command": {
		"common": {
			"errors": {
				"generic": "Something went wrong.",
				"no_enabled_module": "The `{{module}}` is not enabled on this guild.",
				"duration_format": "Wrong duration format.",
				"use_autocomplete": "Could not resolve the provided option. Make sure to select an autocomplete option.",
				"target_not_found": "The given member is not in this guild.",
				"timed_out": "Action timer ran out.",
				"no_message": "Could not find message `{{message_id}}` in channel {{- channel}}",
				"not_message_link": "Provided value `{{-val}}` for argument `{{arg}}` is not a valid message link.",
				"no_message_resolvable": "Provided value `{{-val}}` for argument `{{arg}}` is not a valid message link or id.",
				"no_guild": "Could not find guild `{{guild_id}}`",
				"no_channel": "Could not find channel `{{channel_id}}` in guild `{{- guild}}`",
				"ignored_channel": "Resolving a message from an ignored channel is not allowed."
			},
			"buttons": {
				"cancel": "Cancel"
			}
		},
		"config": {
			"common": {
				"errors": {
					"no_settings": "No guild settings have been initialized yet."
				}
			}
		},
		"mod": {
			"common": {
				"errors": {
					"max_length_reason": "Maximum length of `1900` for reason exceeded.",
					"not_a_text_channel": "{{- channel}} is not a text channel.",
					"no_case": "Cannot find case `#{{case}}`",
					"no_case_range": "Invalid case range `#{{lower_case}}` to `#{{upper_case}}`",
					"case_lower_one": "Case ids have to be above `0`",
					"no_reference_case": "Cannot find reference case `#{{case}}`"
				}
			},
			"case": {
				"autocomplete": {
					"no_reason": "No reason",
					"show_history": "Show history for user {{- user}}"
				}
			},
			"warn": {
				"pending": "Do you really want to warn {{- user}}?",
				"buttons": {
					"execute": "Warn"
				},
				"cancel": "Canceled warn on {{- user}}",
				"success": "Successfully warned {{- user}}"
			},
			"timeout": {
				"errors": {
					"missing_permissions": "Missing permissions to time out {{- user}}",
					"already_timed_out": "{{- user}} is already in timeout"
				},
				"buttons": {
					"execute": "Timeout"
				},
				"pending": "Do you really want to time out {{- user}}?",
				"cancel": "Canceled timeout for {{- user}}",
				"success": "Successfully timed out {{- user}}"
			},
			"kick": {
				"errors": {
					"missing_permissions": "Missing permissions to kick {{- user}}"
				},
				"pending": "Do you really want to kick {{- user}}?",
				"buttons": {
					"execute": "Kick"
				},
				"cancel": "Canceled kick on {{- user}}",
				"success": "Successfully kicked {{- user}}"
			},
			"softban": {
				"errors": {
					"missing_permissions": "Missing permissions to softban {{- user}}"
				},
				"pending": "Do you really want to softban {{- user}}?",
				"not_member": "User {{- user}} is not on this guild. Do you still wish to softban them to remove messages?",
				"buttons": {
					"execute": "Softban"
				},
				"reasons": {
					"clear_messages": "Mod: {{- user}} | Softban to clear messages"
				},
				"cancel": "Canceled softban on {{- user}}",
				"success": {
					"regular": "Successfully softbanned {{- user}}",
					"clear_messages": "Successfully cleared messages from {{- user}}"
				}
			},
			"ban": {
				"errors": {
					"missing_permissions": "Missing permissions to ban {{- user}}",
					"already_banned": "{{- user}} is already banned."
				},
				"pending": "Do you really want to ban {{- user}}?",
				"buttons": {
					"execute": "Ban"
				},
				"cancel": "Canceled ban on {{- user}}",
				"success": "Successfully banned {{- user}}"
			},
			"unban": {
				"errors": {
					"missing_permissions": "Missing permissions to unban {{- user}}",
					"no_ban": "{{- user}} is not banned."
				},
				"pending": "Do you really want to unban {{- user}}?",
				"buttons": {
					"execute": "Unban"
				},
				"cancel": "Canceled unban on {{- user}}",
				"success": "Successfully unbanned {{- user}}"
			},
			"anti_raid_nuke": {
				"common": {
					"errors": {
						"result": {
							"reject_perms": "This user has elevated permissions.",
							"reject_unbanable": "This user is not bannable by me.",
							"reject_bot": "This user is a bot.",
							"reject_self": "This user is you.",
							"reject_protected": "This user has a role ignored by the Anti-Raid-Nuke.",
							"reject_user": "This user is not in the guild."
						},
						"no_hits": "The Anti-Raid-Nuke will not hit anyone, you may want to re-adjust the parameters and try again."
					},
					"parameters": {
						"heading": "Parameters:",
						"current_time": "â€¢ Current time: {{- now}}",
						"dry_run": "â€¢ Operating in **dry-run** mode, no members will be banned",
						"days_zero": "â€¢ Not deleting any messages",
						"days_one": "â€¢ Deleting messages sent in the last day",
						"days_other": "â€¢ Deleting messages sent in the last `{{count}}` days",
						"parsed_ids": "â€¢ Valid members of this guild: `{{valid}}` of `{{total}}` total parsed ids."
					},
					"reason": "Anti-Raid-Nuke `({{current}}/{{count}})`",
					"pending": "Anti-Raid-Nuke is projected to hit `{{count}}` members.\nâ€¢ Created within `{{creation_range}}`\nâ€¢ Joined within `{{join_range}}`",
					"buttons": {
						"execute": "Launch",
						"dry_run": "Dry run",
						"formatted": "Formatted report"
					},
					"cancel": "Canceled Anti-Raid-Nuke.",
					"success": "Anti-Raid-Nuke hit `{{count}}` member."
				},
				"filter": {
					"errors": {
						"invalid_avatar": "Invalid avatar format, must be a raw hash, user id, URL or `none`",
						"pattern_format": "Invalid pattern provided."
					},
					"parameters": {
						"join": {
							"before": "â€¢ Joined before: {{- date}}",
							"after": "â€¢ Joined after: {{- date}}"
						},
						"created": {
							"before": "â€¢ Account created before: {{- date}}",
							"after": "â€¢ Account created after: {{- date}}"
						},
						"pattern": "â€¢ Username matching pattern:",
						"avatar": "â€¢ Avatar hash (user or member) matching: `{{- avatar}}`",
						"zalgo": "â€¢ Usernames including Zalgo characters",
						"filter_confusables": "â€¢ Usernames including confusables",
						"clean_confusables": "â€¢ Cleaning usernames including confusables before applying other filters"
					}
				},
				"file": {
					"errors": {
						"no_ids": "This file does not contain any ids."
					},
					"parameters": {
						"file": "â€¢ File: {{- file_link}}",
						"link_label": "<CDN url>"
					}
				},
				"modal": {
					"errors": {
						"no_ids": "The content does not contain any ids."
					},
					"title": "Anti-Raid-Nuke Entry",
					"components": {
						"label": "{{i}}- Enter valid ids",
						"placeholder": "Members will be parsed by id from the provided content."
					}
				}
			},
			"restrict": {
				"embed": {
					"errors": {
						"no_role": "No role for embed restrictions has been configured.",
						"missing_permissions": "Missing permissions to embed restrict {{- user}}",
						"already_restricted": "{{- user}} is already embed restricted."
					},
					"pending": "Do you really want to embed restrict {{- user}}?",
					"buttons": {
						"execute": "Restrict"
					},
					"cancel": "Canceled embed restriction on {{- user}}",
					"success": "Successfully embed restricted {{- user}}"
				},
				"react": {
					"errors": {
						"no_role": "No role for reaction restrictions has been configured.",
						"missing_permissions": "Missing permissions to react restrict {{- user}}",
						"already_restricted": "{{- user}} is already reaction restricted."
					},
					"pending": "Do you really want to react restrict {{- user}}?",
					"buttons": {
						"execute": "Restrict"
					},
					"cancel": "Canceled react restriction on {{- user}}",
					"success": "Successfully react restricted {{- user}}"
				},
				"emoji": {
					"errors": {
						"no_role": "No role for emoji restrictions has been configured.",
						"missing_permissions": "Missing permissions to emoji restrict {{- user}}",
						"already_restricted": "{{- user}} is already emoji restricted."
					},
					"pending": "Do you really want to emoji restrict {{- user}}?",
					"buttons": {
						"execute": "Restrict"
					},
					"cancel": "Canceled emoji restriction on {{- user}}",
					"success": "Successfully emoji restricted {{- user}}"
				},
				"unrole": {
					"errors": {
						"missing_permissions": "Missing permissions to unrole `#{{case}}`",
						"already_processed": "{{- user}} with case {{- case}} has no running restrictions."
					},
					"pending": "Do you really want to unrole {{- user}} from `{{- role}}` with case {{- case}}?",
					"buttons": {
						"execute": "Unrole"
					},
					"cancel": "Canceled unrole on {{- user}} from `{{- role}}` on case {{- case}}",
					"success": "Successfully unroled {{- user}} from `{{- role}}` with case {{- case}}"
				}
			},
			"lockdown": {
				"lock": {
					"errors": {
						"missing_permissions": "Missing permissions to lock {{- channel}}",
						"already_locked": "{{- channel}} is already locked.",
						"bot_requires_admin": "The bot requires the `ADMINISTRATOR` permission to lock down channels as Discord does not allow setting all overwrites without it, potentially causing issues when locking or unlocking."
					},
					"pending": "Do you really want to lock {{- channel}}?",
					"buttons": {
						"execute": "Lock"
					},
					"message": "ðŸ”’ This channel has been locked, it will be unlocked {{- duration}}",
					"message_reason": "ðŸ”’ This channel has been locked with reason `{{- reason}}`, it will be unlocked {{- duration}}",
					"cancel": "Canceled locking of {{- channel}}",
					"success": "Successfully locked {{- channel}}"
				},
				"lift": {
					"errors": {
						"missing_permissions": "Missing permissions to lift the lock on {{- channel}}",
						"not_locked": "{{- channel}} is not locked.",
						"failure": "{{- channel}} could not be unlocked."
					},
					"pending": "Do you really want to lift the lock on {{- channel}}?",
					"buttons": {
						"execute": "Unlock"
					},
					"cancel": "Canceled lifting lock of {{- channel}}",
					"success": "Successfully lifted lock on {{- channel}}"
				}
			},
			"reason": {
				"success": "Successfully set reason for case {{- case}}",
				"success_multiple": "Successfully set reason for case range {{- lower_case}} to {{- upper_case}} (`{{current}}/{{count}}` cases)",
				"pending_multiple": "Do you really want to set a reason for case range {{- lower_case}} to {{- upper_case}} (`{{count}}` cases)?",
				"buttons": {
					"execute": "Set Reason"
				},
				"cancel": "Canceled setting reason."
			},
			"reference": {
				"success": "Successfully set reference for case {{- case}} to {{- ref}}"
			},
			"duration": {
				"success": "Successfully set duration for case {{- case}}"
			},
			"clear": {
				"errors": {
					"no_results": "Could not find messages in the provided range that are younger than 12 hours.",
					"other_channel": "The provided messages have to be from the same channel."
				},
				"pending_one": "You are about to clear `{{count}}` message by $t(command.mod.clear.authors, {\"count\": {{author_count}}}) sent in `{{time}}`. Are you sure?",
				"pending_other": "You are about to clear `{{count}}` messages by $t(command.mod.clear.authors, {\"count\": {{author_count}}}) sent in `{{time}}`. Are you sure?",
				"message_too_old": "Note: You can only clear messages that are up to 12 hours old. The oldest message that will be cleared is shown below.",
				"success_one": "Successfully cleared `{{count}}` message by $t(command.mod.clear.authors, {\"count\": {{author_count}}}) sent in `{{time}}`",
				"success_other": "Successfully cleared `{{count}}` messages by $t(command.mod.clear.authors, {\"count\": {{author_count}}}) sent in `{{time}}`",
				"authors_one": "`{{count}}` author",
				"authors_other": "`{{count}}` authors",
				"buttons": {
					"execute_one": "Clear {{count}} message",
					"execute_other": "Clear {{count}} messages"
				},
				"cancel": "Cancelled clearing messages."
			}
		},
		"utility": {
			"ping": {
				"success": "ok"
			},
			"check_scam": {
				"found_one": "Detected scam domain ({{count}})",
				"found_other": "Detected scam domains ({{count}})"
			},
			"refresh_scamlist": {
				"missing_env": "Missing environment variables {{missing, list}} to fetch scam domains from.",
				"refresh_never": "`never`",
				"amount": "â€¢ Amount: `{{count}}`",
				"before": "â€¢ Before: `{{count}}`",
				"after": "â€¢ After: `{{count}}`",
				"last_change": "â€¢ Last change: {{- timestamp}}",
				"buttons": {
					"execute": "Refresh"
				},
				"cancel": "Canceled scam domain list refreshing.",
				"success": "Successfully refreshed scam domain lists.",
				"pending": "Current scam domain lists:",
				"error": "Something went wrong when refreshing scam domains."
			},
			"sponsor": {
				"errors": {
					"no_role": "No role for sponsors has been configured.",
					"already_sponsor": "{{- user}} is already a sponsor."
				},
				"pending": "Do you really want to apply the sponsor role to {{- user}}?",
				"buttons": {
					"execute": "Apply"
				},
				"reason": "Sponsor role",
				"cancel": "Canceled applying sponsor role to {{- user}}",
				"success": "Successfully applied sponsor role to {{- user}}"
			}
		}
	},
	"log": {
		"history": {
			"title": "Case History",
			"user_details": "User details",
			"user_details_description": "â€¢ Username: {{- user_mention}} - `{{- user_tag}}` ({{user_id}})\nâ€¢ Created: {{- created_at}} ({{- created_at_since}})",
			"member_details": "Member details",
			"member_details_description": "â€¢ Nickname: {{- member_nickname}}\nâ€¢ Roles: {{- member_roles}}\nâ€¢ Joined: {{- joined_at}} ({{- joined_at_since}})",
			"member_details_no_nickname": "No nickname",
			"summary_truncated": "{{- summary}}\nand more..."
		},
		"mod_log": {
			"case_log": {
				"description": "**Member**: `{{- target_tag}}` ({{target_id}})\n**Action**: {{- action}}",
				"expiration": "\n**Expiration**: {{- time}}",
				"context": "**Context:** {{- link}}",
				"context_sub": "Beam me up, Yuu",
				"reason": "\n**Reason:** {{- reason}}",
				"reason_fallback": "\n**Reason:** Use `/reason {{case_id}} <...reason>` to set a reason for this case",
				"reference": "\n**Reference:** {{- ref}}",
				"footer": "Case {{case_id}}"
			},
			"anti_raid_nuke": {
				"description": "**Action**: Anti-Raid-Nuke\n**Reason:** {{- reason}}\n**Hit count:** {{count}}",
				"parameters": {
					"cutoff": "**Joined after:** {{- joined_after}}\n**Account created after:** {{- account_created_after}}"
				},
				"report": "**Report:** {{- link}}",
				"report_sub": "Beam me up, Yuu",
				"footer": "Cases {{from}}-{{to}}"
			},
			"scam": {
				"reason": "Scam detection"
			},
			"spam": {
				"reason": "Spam detection",
				"reason_mentions": "Mention spam detection"
			},
			"auto_mod": {
				"keyword": "Message contained a keyword defined in AutoMod rule",
				"keyword_preset": "Message flagged by AutoMod",
				"harmful_link": "Message contained a harmful link",
				"spam": "Message was detected as spam",
				"default": "Message flagged by AutoMod"
			}
		},
		"member_log": {
			"description": "â€¢ Username: {{- user_mention}} - `{{- user_tag}}` ({{user_id}})\nâ€¢ Created: {{- created_at}} ({{- created_at_since}})",
			"joined_at": "\nâ€¢ Joined: {{- joined_at}} ({{- joined_at_since}})",
			"left_at": "\nâ€¢ Left: {{- left_at}} ({{- left_at_since}})",
			"footer": {
				"joined": "User joined",
				"left": "User left"
			}
		},
		"guild_log": {
			"message_updated": {
				"title": "Message updated",
				"channel": "â€¢ Channel: {{- channel}}",
				"jump_to": "â€¢ [Jump to]({{- link}})"
			},
			"message_deleted": {
				"title": "Message deleted",
				"channel": "â€¢ Channel: {{- channel}}",
				"embeds": "â€¢ Embeds: {{- embeds}}",
				"attachments": "â€¢ Attachments: {{- attachments}}",
				"stickers": "â€¢ Stickers: {{- stickers}}",
				"jump_to": "â€¢ [Jump to]({{- link}})",
				"reply_to": "â€¢ Replying to [{{message_id}}]({{- message_url}}) by `{{- user_tag}}` ({{user_id}})",
				"reply_to_mentions": "â€¢ @Replying to [{{message_id}}]({{- message_url}}) by `{{- user_tag}}` ({{user_id}})"
			},
			"message_bulk_deleted": {
				"title": "Message deleted bulk",
				"multiple_authors": "Multiple authors",
				"description": "â€¢ Channel: {{- channel}}\nâ€¢ Logs: See attachment file for full logs (possibly above this embed)",
				"attachment": "â†³ Attachment: {{- url}}",
				"sticker": "â†³ Sticker: {{- name}}",
				"reply_to": "â†³ Replying to {{message_id}} ({{- message_url}}) by {{- user_tag}} ({{user_id}})",
				"reply_to_mentions": "â†³ @Replying to {{message_id}} ({{- message_url}}) by {{- user_tag}} ({{user_id}})"
			},
			"voice_state_update": {
				"title": "Voice state update",
				"joined": "Joined {{- channel}}",
				"moved": "Moved from {{- from_channel}} to {{- to_channel}}",
				"left": "Left {{- channel}}"
			},
			"thread_created": {
				"title": "Thread created",
				"channel": "â€¢ Thread: {{- channel}} {{- name}} {{channel_id}}",
				"starter": "â€¢ Starter message: {{message_id}}",
				"jump_to": "â€¢ [Jump to starter message]({{- link}})"
			},
			"thread_deleted": {
				"title": "Thread deleted",
				"channel": "â€¢ Thread: {{- name}} {{channel_id}}",
				"starter": "â€¢ Starter message: {{message_id}}",
				"jump_to": "â€¢ [Jump to starter message]({{- link}})"
			},
			"messages_cleared": {
				"title": "Messages cleared",
				"messages_one": "â€¢ Message: {{count}}",
				"messages_other": "â€¢ Messages: {{count}}",
				"authors_one": "â€¢ Author: {{count}}",
				"authors_other": "â€¢ Authors: {{count}}",
				"time": "â€¢ Timespan: {{time}}"
			}
		},
		"anti_raid_nuke": {
			"pending": "The report for the Anti-Raid-Nuke is being processed...",
			"title": "Anti-Raid-Nuke launched",
			"title_dryrun": "Anti-Raid-Nuke dry run",
			"description": "â€¢ Moderator: {{- moderator}}\nâ€¢ Hit count: {{count}}"
		}
	},
	"formatters": {
		"formatting": {
			"guild_member": "{{- id}}| Joined: {{- join}} | Created: {{- creation}} | {{- tag}}"
		},
		"anti_raid_nuke": {
			"title": "Anti-Raid-Nuke report for {{guild}}",
			"summary": {
				"title": "**Summary**",
				"mode": "**Mode:** `{{mode}}`",
				"current_time": "**Current time:** `{{- current_time}}`",
				"time_taken": "**Time taken:** `{{time_taken}}`",
				"moderator": "**Moderator:** `{{- moderator}}`",
				"reason": "**Reason:** `{{- reason}}`",
				"dry_run": "**Operated in `dry-run` mode**",
				"blast_mode": "**Operated in `BLAST` mode**"
			},
			"results": {
				"title": "**Results**",
				"total": "**Total:** `{{count}}`",
				"banned": "`{{count}}` members were successfully banned",
				"banned_zero": "No members were banned",
				"failed": "`{{count}}` members failed to be banned",
				"failed_zero": "All members were banned",
				"ratio": "Ratio: `{{ratio}}`"
			},
			"parameters": {
				"title": "**Parameters**",
				"avatar": "**Matching avatar:** `{{avatar}}`",
				"pattern": {
					"title": "**Pattern:** `{{- pattern}}`",
					"confusables": "Pattern confusables mode: `$t(formatters.anti_raid_nuke.parameters.confusables.{{mode}})`",
					"insensitive": "Pattern is case-insensitive",
					"full_match": "Pattern is restricted to full matches"
				},
				"confusables": {
					"title": "Confusables mode: `$t(formatters.anti_raid_nuke.parameters.confusables.{{mode}})`",
					"0": "Disabled",
					"1": "Pattern resistance only",
					"2": "Filtering members only",
					"3": "Filtering members and pattern resistance"
				},
				"created": {
					"title": "**Creation range:**",
					"after": "Created after: `{{- after}}`",
					"before": "Created before: `{{- before}}`"
				},
				"joined": {
					"title": "**Join range:**",
					"after": "Joined after: `{{- after}}`",
					"before": "Joined before: `{{- before}}`"
				},
				"file": {
					"title": "**File:** `{{file}}`",
					"placeholder": "<CDN link>"
				},
				"days_zero": "Not deleting any messages",
				"days_one": "Deleting messages sent in the last day",
				"days_other": "Deleting messages sent in the last `{{count}}` days",
				"zalgo": "Filtering members with zalgo in their username",
				"none": "Not specified"
			},
			"cases": {
				"title": "**Cases**",
				"single": "Case `#{{case_id}}`",
				"range": "From case `#{{from}}` to case `#{{to}}`",
				"none": "No case created for this blast",
				"log_message": "**Case log:** {{- link}}",
				"log_message_sub": "Beam me up, Yuu",
				"log_message_none": "**Case log:** No case log created"
			},
			"successes": {
				"title": "**Successes**",
				"none": "No successes, something went wrong",
				"tables": ["Case id", "Member id", "Username"]
			},
			"failures": {
				"title": "**Failures**",
				"none": "No failures, everything went fine",
				"tables": ["Member id", "Username", "Error"]
			},
			"raw_data": {
				"title": "**Raw data**",
				"description": "Sorted by join date descending, highlight based on account age and success/failure"
			}
		}
	}
}
