{
	"common": {
		"errors": {
			"no_mod_log_channel": "No mod log channel has been initialized yet.",
			"no_anti_raid_archive_channel": "No Anti-Raid-Nuke archive channel has been initialized yet.",
			"no_report_channel": "No report channel has been initialized yet.",
			"no_content": "<No message content>"
		},
		"moderator": "Moderator",
		"and_more": "and more..."
	},
	"command": {
		"common": {
			"errors": {
				"generic": "Something went wrong.",
				"no_enabled_module": "The `{{module}}` is not enabled on this guild.",
				"duration_format": "Wrong duration format.",
				"use_autocomplete": "Could not resolve the provided option. Make sure to select an autocomplete option.",
				"target_not_found": "The given member is not in this guild.",
				"timed_out": "Action timer ran out.",
				"no_message": "Could not find message `{{message_id}}` in channel {{- channel}}",
				"not_message_link": "Provided value `{{-val}}` for argument `{{arg}}` is not a valid message link.",
				"no_message_resolvable": "Provided value `{{-val}}` for argument `{{arg}}` is not a valid message link or id.",
				"no_guild": "Could not find guild `{{guild_id}}`",
				"no_channel": "Could not find channel `{{channel_id}}` in guild `{{- guild}}`",
				"ignored_channel": "Resolving a message from an ignored channel is not allowed."
			},
			"buttons": {
				"cancel": "Cancel"
			}
		},
		"config": {
			"common": {
				"errors": {
					"no_settings": "No guild settings have been initialized yet."
				}
			}
		},
		"mod": {
			"common": {
				"errors": {
					"max_length_reason": "Maximum length of `1900` for reason exceeded.",
					"not_a_text_channel": "{{- channel}} is not a text channel.",
					"no_case": "Cannot find case `#{{case}}`",
					"no_report": "Cannot find report `#{{report}}`",
					"no_case_range": "Invalid case range `#{{lower_case}}` to `#{{upper_case}}`",
					"case_lower_one": "Case ids have to be above `0`",
					"no_reference_case": "Cannot find reference case `#{{case}}`",
					"already_processed": "{{- user}} with case {{- case}} has no running restrictions.",
					"no_reference_report": "Cannot find reference report `#{{report}}`"
				},
				"reasons": [
					"COPPA",
					"DM harassment",
					"Insults",
					"NSFW",
					"Off-topic in support",
					"Possible scam",
					"Rude on support",
					"Selfbot",
					"Shitpost",
					"Slurs",
					"Spam",
					"Suspicious or spam account",
					"TOS violation",
					"Troll"
				]
			},
			"case": {
				"autocomplete": {
					"no_reason": "No reason",
					"show_history": "Show history for user {{- user}}"
				}
			},
			"reports": {
				"autocomplete": {
					"no_reason": "No reason",
					"show_history_target": "Show history for target {{- user}}",
					"show_history_author": "Show history for author {{- user}}"
				}
			},
			"warn": {
				"pending": "Do you really want to warn {{- user}}?",
				"buttons": {
					"execute": "Warn"
				},
				"cancel": "Canceled warn on {{- user}}",
				"success": "Successfully warned {{- user}}"
			},
			"timeout": {
				"errors": {
					"missing_permissions": "Missing permissions to time out {{- user}}",
					"already_timed_out": "{{- user}} is already in timeout"
				},
				"buttons": {
					"execute": "Timeout"
				},
				"pending": "Do you really want to time out {{- user}}?",
				"cancel": "Canceled timeout for {{- user}}",
				"success": "Successfully timed out {{- user}}"
			},
			"kick": {
				"errors": {
					"missing_permissions": "Missing permissions to kick {{- user}}"
				},
				"pending": "Do you really want to kick {{- user}}?",
				"buttons": {
					"execute": "Kick"
				},
				"cancel": "Canceled kick on {{- user}}",
				"success": "Successfully kicked {{- user}}"
			},
			"softban": {
				"errors": {
					"missing_permissions": "Missing permissions to softban {{- user}}"
				},
				"pending": "Do you really want to softban {{- user}}?",
				"not_member": "User {{- user}} is not on this guild. Do you still wish to softban them to remove messages?",
				"buttons": {
					"execute": "Softban"
				},
				"reasons": {
					"clear_messages": "Mod: {{- user}} | Softban to clear messages"
				},
				"cancel": "Canceled softban on {{- user}}",
				"success": {
					"regular": "Successfully softbanned {{- user}}",
					"clear_messages": "Successfully cleared messages from {{- user}}"
				}
			},
			"ban": {
				"errors": {
					"missing_permissions": "Missing permissions to ban {{- user}}",
					"already_banned": "{{- user}} is already banned."
				},
				"pending": "Do you really want to ban {{- user}}?",
				"buttons": {
					"execute": "Ban"
				},
				"cancel": "Canceled ban on {{- user}}",
				"success": "Successfully banned {{- user}}"
			},
			"unban": {
				"errors": {
					"missing_permissions": "Missing permissions to unban {{- user}}",
					"no_ban": "{{- user}} is not banned."
				},
				"pending": "Do you really want to unban {{- user}}?",
				"buttons": {
					"execute": "Unban"
				},
				"cancel": "Canceled unban on {{- user}}",
				"success": "Successfully unbanned {{- user}}"
			},
			"anti_raid_nuke": {
				"common": {
					"errors": {
						"result": {
							"reject_perms": "This user has elevated permissions.",
							"reject_unbanable": "This user is not bannable by me.",
							"reject_bot": "This user is a bot.",
							"reject_self": "This user is you.",
							"reject_protected": "This user has a role ignored by the Anti-Raid-Nuke.",
							"reject_user": "This user is not in the guild."
						},
						"no_hits": "The Anti-Raid-Nuke will not hit anyone, you may want to re-adjust the parameters and try again.",
						"no_ids": "The provided content does not contain any valid member ids.",
						"no_filter": "Anti-Raid-Nuke is projected to hit all members. Protocol aborted.",
						"no_concurrent_use": "Cannot execute more than one Anti-Raid-Nuke for the same server at a time."
					},
					"parameters": {
						"heading": "Parameters:",
						"launch_time": "• Time of launch: {{- now}}",
						"days_zero": "• Not deleting any messages",
						"days_one": "• Deleting messages sent in the last day",
						"days_other": "• Deleting messages sent in the last `{{count}}` days",
						"parsed_ids": "• Valid members of this guild: `{{valid}}` of `{{total}}` total parsed ids.",
						"hide": "• Hidden command execution only generates a preliminary report. Execute publicly to launch a nuke."
					},
					"reason": "Anti-Raid-Nuke `({{current}}/{{count}})`",
					"pending_one": "Anti-Raid-Nuke is projected to hit `{{count}}` member.",
					"pending_other": "Anti-Raid-Nuke is projected to hit `{{count}}` members.\n• Created within `{{creation_range}}`\n• Joined within `{{join_range}}`",
					"buttons": {
						"execute": "Launch",
						"formatted": "Formatted report"
					},
					"cancel": "Canceled Anti-Raid-Nuke.",
					"success_one": "Anti-Raid-Nuke hit `{{count}}` member.",
					"success_other": "Anti-Raid-Nuke hit `{{count}}` members."
				},
				"filter": {
					"errors": {
						"invalid_avatar": "Invalid avatar format, must be a raw hash, user id, URL or `none`",
						"pattern_format": "Invalid pattern provided."
					},
					"parameters": {
						"join": {
							"before": "• Joined before: {{- date}}",
							"after": "• Joined after: {{- date}}"
						},
						"created": {
							"before": "• Account created before: {{- date}}",
							"after": "• Account created after: {{- date}}"
						},
						"pattern": "• Username matching pattern:",
						"avatar": "• Avatar hash (user or member) matching: `{{- avatar}}`",
						"zalgo": "• Usernames including Zalgo characters",
						"filter_confusables": "• Usernames including confusables",
						"clean_confusables": "• Cleaning usernames including confusables before applying other filters"
					}
				},
				"file": {
					"parameters": {
						"file": "• File: {{- file_link}}",
						"link_label": "<CDN url>"
					}
				},
				"modal": {
					"title": "Anti-Raid-Nuke Entry",
					"components": {
						"label": "{{idx}}- Enter valid ids",
						"placeholder": "Members will be parsed by id from the provided content."
					}
				}
			},
			"restrict": {
				"embed": {
					"errors": {
						"no_role": "No role for embed restrictions has been configured.",
						"missing_permissions": "Missing permissions to embed restrict {{- user}}",
						"already_restricted": "{{- user}} is already embed restricted."
					},
					"pending": "Do you really want to embed restrict {{- user}}?",
					"buttons": {
						"execute": "Restrict"
					},
					"cancel": "Canceled embed restriction on {{- user}}",
					"success": "Successfully embed restricted {{- user}}"
				},
				"react": {
					"errors": {
						"no_role": "No role for reaction restrictions has been configured.",
						"missing_permissions": "Missing permissions to react restrict {{- user}}",
						"already_restricted": "{{- user}} is already reaction restricted."
					},
					"pending": "Do you really want to react restrict {{- user}}?",
					"buttons": {
						"execute": "Restrict"
					},
					"cancel": "Canceled react restriction on {{- user}}",
					"success": "Successfully react restricted {{- user}}"
				},
				"emoji": {
					"errors": {
						"no_role": "No role for emoji restrictions has been configured.",
						"missing_permissions": "Missing permissions to emoji restrict {{- user}}",
						"already_restricted": "{{- user}} is already emoji restricted."
					},
					"pending": "Do you really want to emoji restrict {{- user}}?",
					"buttons": {
						"execute": "Restrict"
					},
					"cancel": "Canceled emoji restriction on {{- user}}",
					"success": "Successfully emoji restricted {{- user}}"
				},
				"unrole": {
					"errors": {
						"missing_permissions": "Missing permissions to unrole `#{{case}}`"
					},
					"pending": "Do you really want to unrole {{- user}} from `{{- role}}` with case {{- case}}?",
					"buttons": {
						"execute": "Unrole"
					},
					"cancel": "Canceled unrole on {{- user}} from `{{- role}}` on case {{- case}}",
					"success": "Successfully unroled {{- user}} from `{{- role}}` with case {{- case}}"
				}
			},
			"lockdown": {
				"lock": {
					"errors": {
						"missing_permissions": "Missing permissions to lock {{- channel}}",
						"already_locked": "{{- channel}} is already locked.",
						"bot_requires_admin": "The bot requires the `ADMINISTRATOR` permission to lock down channels as Discord does not allow setting all overwrites without it, potentially causing issues when locking or unlocking."
					},
					"pending": "Do you really want to lock {{- channel}}?",
					"buttons": {
						"execute": "Lock"
					},
					"message": "🔒 This channel has been locked, it will be unlocked {{- duration}}",
					"message_reason": "🔒 This channel has been locked with reason `{{- reason}}`, it will be unlocked {{- duration}}",
					"cancel": "Canceled locking of {{- channel}}",
					"success": "Successfully locked {{- channel}}"
				},
				"lift": {
					"errors": {
						"missing_permissions": "Missing permissions to lift the lock on {{- channel}}",
						"not_locked": "{{- channel}} is not locked.",
						"failure": "{{- channel}} could not be unlocked."
					},
					"pending": "Do you really want to lift the lock on {{- channel}}?",
					"buttons": {
						"execute": "Unlock"
					},
					"cancel": "Canceled lifting lock of {{- channel}}",
					"success": "Successfully lifted lock on {{- channel}}"
				}
			},
			"reason": {
				"success": "Successfully set reason for case {{- case}}",
				"success_multiple": "Successfully set reason for case range {{- lower_case}} to {{- upper_case}} (`{{current}}/{{count}}` cases)",
				"pending_multiple": "Do you really want to set a reason for case range {{- lower_case}} to {{- upper_case}} (`{{count}}` cases)?",
				"buttons": {
					"execute": "Set Reason"
				},
				"cancel": "Canceled setting reason."
			},
			"reference": {
				"case": "Successfully set the **case reference** for case {{- case}} to {{- ref}}",
				"report": "Successfully set the **report reference** for case {{- case}} to {{- ref}}"
			},
			"duration": {
				"errors": {
					"timeout": "Could not change the duration of the timeout for case {{- case}}"
				},
				"success": "Successfully set duration for case {{- case}}"
			},
			"clear": {
				"errors": {
					"no_results": "Could not find messages in the provided range that are younger than 12 hours.",
					"other_channel": "The provided messages have to be from the same channel."
				},
				"pending_one": "You are about to clear `{{count}}` message by $t(command.mod.clear.authors, {\"count\": {{author_count}}}) sent in `{{time}}`. Are you sure?",
				"pending_other": "You are about to clear `{{count}}` messages by $t(command.mod.clear.authors, {\"count\": {{author_count}}}) sent in `{{time}}`. Are you sure?",
				"message_too_old": "Note: You can only clear messages that are up to 12 hours old. The oldest message that will be cleared is shown below.",
				"success_one": "Successfully cleared `{{count}}` message by $t(command.mod.clear.authors, {\"count\": {{author_count}}}) sent in `{{time}}`",
				"success_other": "Successfully cleared `{{count}}` messages by $t(command.mod.clear.authors, {\"count\": {{author_count}}}) sent in `{{time}}`",
				"authors_one": "`{{count}}` author",
				"authors_other": "`{{count}}` authors",
				"buttons": {
					"execute_one": "Clear {{count}} message",
					"execute_other": "Clear {{count}} messages"
				},
				"cancel": "Cancelled clearing messages."
			},
			"status": {
				"success": "Successfully set status of report {{- report}} to `$t(log.report_log.report_status.{{status}})`"
			}
		},
		"utility": {
			"ping": {
				"success": "ok"
			},
			"check_scam": {
				"found_one": "Detected scam domain ({{count}})",
				"found_other": "Detected scam domains ({{count}})"
			},
			"refresh_scamlist": {
				"missing_env": "Missing environment variables {{missing, list}} to fetch scam domains from.",
				"refresh_never": "`never`",
				"amount": "• Amount: `{{count}}`",
				"before": "• Before: `{{count}}`",
				"after": "• After: `{{count}}`",
				"last_change": "• Last change: {{- timestamp}}",
				"buttons": {
					"execute": "Refresh"
				},
				"cancel": "Canceled scam domain list refreshing.",
				"success": "Successfully refreshed scam domain lists.",
				"pending": "Current scam domain lists:",
				"error": "Something went wrong when refreshing scam domains."
			},
			"sponsor": {
				"errors": {
					"no_role": "No role for sponsors has been configured.",
					"already_sponsor": "{{- user}} is already a sponsor."
				},
				"pending": "Do you really want to apply the sponsor role to {{- user}}?",
				"buttons": {
					"execute": "Apply"
				},
				"reason": "Sponsor role",
				"cancel": "Canceled applying sponsor role to {{- user}}",
				"success": "Successfully applied sponsor role to {{- user}}"
			},
			"report": {
				"common": {
					"errors": {
						"recently_reported": {
							"message": "This message has already been recently reported, thanks for making our community a better place!",
							"user": "This user has already been recently reported, thanks for making our community a better place!"
						},
						"no_self": "You cannot report yourself.",
						"invalid_attachment": "Invalid attachment, only images are allowed.",
						"timed_out": "The report has timed out, please try again."
					},
					"warnings": "**Attention:** We are not Discord and we **cannot** moderate {{- trust_and_safety}} issues.\n**Creating false reports may lead to moderation actions.**",
					"trust_and_safety_sub": "Trust & Safety",
					"buttons": {
						"execute": "Create Report",
						"cancel": "Cancel",
						"discord_report": "Report to Discord"
					},
					"modal": {
						"label": "The reason for the report",
						"placeholder": "Please enter a detailed reason for the report"
					}
				},
				"message": {
					"modal": {
						"title": "Message report"
					},
					"pending": "Are you sure you want to report {{- message_link}} to the server moderators?\n**Reason:** {{- reason}}",
					"pending_sub": "this message",
					"cancel": "Message report canceled.",
					"success": "Successfully reported message, thanks for making our community a better place!"
				},
				"user": {
					"modal": {
						"title": "User report"
					},
					"pending": "Are you sure you want to report {{- user}} to the server moderators?\n**Reason:** {{- reason}}",
					"cancel": "User report canceled.",
					"success": "Successfully reported user, thanks for making our community a better place!"
				}
			}
		}
	},
	"log": {
		"history": {
			"common": {
				"errors": {
					"no_history": "`No history found`"
				},
				"user_details": {
					"title": "User details",
					"description": "• Username: {{- user_mention}} - `{{- user_tag}}` ({{user_id}})\n• Created: {{- created_at}} ({{- created_at_since}})"
				},
				"member_details": {
					"title": "Member details",
					"description": {
						"nickname": "• Nickname: `{{- nickname}}`",
						"roles_one": "• Role ({{count}}): {{- roles}}",
						"roles_other": "• Roles ({{count}}): {{- roles}}",
						"joined": "• Joined: {{- joined_at}} ({{- joined_at_since}})"
					}
				}
			},
			"cases": {
				"title": "Case History",
				"summary": {
					"warning_one": "{{count}} warning",
					"warning_other": "{{count}} warnings",
					"restriction_one": "{{count}} restriction",
					"restriction_other": "{{count}} restrictions",
					"timeout_one": "{{count}} timeout",
					"timeout_other": "{{count}} timeouts",
					"kick_one": "{{count}} kick",
					"kick_other": "{{count}} kicks",
					"softban_one": "{{count}} softban",
					"softban_other": "{{count}} softbans",
					"ban_one": "{{count}} ban",
					"ban_other": "{{count}} bans",
					"unban_one": "{{count}} unbans",
					"unban_other": "{{count}} unbans"
				},
				"action_label": {
					"restriction": "RESTRICT",
					"warn": "WARN",
					"kick": "KICK",
					"softban": "SOFTBAN",
					"ban": "BAN",
					"unban": "UNBAN",
					"timeout": "TIMEOUT",
					"unknown": "UNKNOWN"
				}
			},
			"reports": {
				"title": "Report History",
				"user_role": {
					"author": "Author",
					"target": "Target"
				},
				"summary": {
					"target": "{{count}}x reported",
					"author_one": "{{count}} report authored",
					"author_other": "{{count}} reports authored",
					"spam_one": "{{count}} spam report",
					"spam_other": "{{count}} spam reports"
				},
				"status_label": {
					"pending": "PENDING",
					"approved": "APPROVED",
					"rejected": "REJECTED",
					"spam": "SPAM",
					"unknown": "UNKNOWN"
				}
			}
		},
		"mod_log": {
			"case_log": {
				"description": "**Member**: `{{- target_tag}}` ({{target_id}})\n**Action**: {{- action}}",
				"expiration": "\n**Expiration**: {{- time}}",
				"context": "**Context:** {{- link}}",
				"context_sub": "Beam me up, Yuu",
				"reason": "\n**Reason:** {{- reason}}",
				"reason_fallback": "\n**Reason:** Use `/reason {{case_id}} <...reason>` to set a reason for this case",
				"case_reference": "\n**Case Reference:** {{- ref}}",
				"report_reference": "\n**Report Reference:** {{- report_ref}}",
				"footer": "Case {{case_id}}"
			},
			"anti_raid_nuke": {
				"description": "**Action**: Anti-Raid-Nuke\n**Reason:** {{- reason}}\n**Hit count:** {{count}}",
				"report": "**Report:** {{- link}}",
				"report_sub": "Beam me up, Yuu",
				"footer": "Cases {{from}}-{{to}}"
			},
			"scam": {
				"reason": "Scam detection"
			},
			"spam": {
				"reason": "Spam detection",
				"reason_mentions": "Mention spam detection"
			},
			"auto_mod": {
				"keyword": "Message contained a keyword defined in AutoMod rule",
				"keyword_preset": "Message flagged by AutoMod",
				"harmful_link": "Message contained a harmful link",
				"spam": "Message was detected as spam",
				"default": "Message flagged by AutoMod"
			}
		},
		"member_log": {
			"description": "• Username: {{- user_mention}} - `{{- user_tag}}` ({{user_id}})\n• Created: {{- created_at}} ({{- created_at_since}})",
			"joined_at": "\n• Joined: {{- joined_at}} ({{- joined_at_since}})",
			"left_at": "\n• Left: {{- left_at}} ({{- left_at_since}})",
			"footer": {
				"joined": "User joined",
				"left": "User left"
			}
		},
		"guild_log": {
			"message_updated": {
				"title": "Message updated",
				"channel": "• Channel: {{- channel}}",
				"jump_to": "• [Jump to]({{- link}})"
			},
			"message_deleted": {
				"title": "Message deleted",
				"channel": "• Channel: {{- channel}}",
				"embeds": "• Embeds: {{- embeds}}",
				"attachments": "• Attachments: {{- attachments}}",
				"stickers": "• Stickers: {{- stickers}}",
				"jump_to": "• [Jump to]({{- link}})",
				"reply_to": "• Replying to [{{message_id}}]({{- message_url}}) by `{{- user_tag}}` ({{user_id}})",
				"reply_to_mentions": "• @Replying to [{{message_id}}]({{- message_url}}) by `{{- user_tag}}` ({{user_id}})"
			},
			"message_bulk_deleted": {
				"title": "Message deleted bulk",
				"multiple_authors": "Multiple authors",
				"description": "• Channel: {{- channel}}\n• Logs: See attachment file for full logs (possibly above this embed)",
				"attachment": "↳ Attachment: {{- url}}",
				"sticker": "↳ Sticker: {{- name}}",
				"reply_to": "↳ Replying to {{message_id}} ({{- message_url}}) by {{- user_tag}} ({{user_id}})",
				"reply_to_mentions": "↳ @Replying to {{message_id}} ({{- message_url}}) by {{- user_tag}} ({{user_id}})"
			},
			"voice_state_update": {
				"title": "Voice state update",
				"joined": "Joined {{- channel}}",
				"moved": "Moved from {{- from_channel}} to {{- to_channel}}",
				"left": "Left {{- channel}}"
			},
			"thread_created": {
				"title": "Thread created",
				"channel": "• Thread: {{- channel}} {{- name}} {{channel_id}}",
				"starter": "• Starter message: {{message_id}}",
				"jump_to": "• [Jump to starter message]({{- link}})"
			},
			"thread_deleted": {
				"title": "Thread deleted",
				"channel": "• Thread: {{- name}} {{channel_id}}",
				"starter": "• Starter message: {{message_id}}",
				"jump_to": "• [Jump to starter message]({{- link}})"
			},
			"messages_cleared": {
				"title": "Messages cleared",
				"messages_one": "• Message: {{count}}",
				"messages_other": "• Messages: {{count}}",
				"authors_one": "• Author: {{count}}",
				"authors_other": "• Authors: {{count}}",
				"time": "• Timespan: {{time}}"
			}
		},
		"anti_raid_nuke": {
			"pending": "The report for the Anti-Raid-Nuke is being processed...",
			"title": "Anti-Raid-Nuke launched",
			"description": "• Moderator: {{- moderator}}\n• Hit count: {{count}}"
		},
		"report_log": {
			"title": "Report #{{report_id}}",
			"reason": "**Reason:**\n{{- reason}}",
			"target": "**Reported User:** {{- target}}",
			"message": "**Message:** {{- message_link}} ({{- channel}})",
			"message_sub": "Beam me up, Yuu",
			"message_fallback": "`Message deleted`",
			"case_reference": "**Case Reference:** {{- ref}}",
			"status": "**Status:** $t(log.report_log.report_status.{{status}})",
			"moderator": "**Moderator:** {{- mod}}",
			"updated_at": "**Updated at:** {{- updated_at}}",
			"footer": "Hint: You can resolve a report by referencing it in a moderation action, setting it with /reference to an already existing case, or use /reports status to approve or reject it directly.",
			"report_status": {
				"0": "Pending",
				"1": "Approved",
				"2": "Rejected",
				"3": "Spam"
			}
		}
	},
	"formatters": {
		"formatting": {
			"guild_member": "{{- id}}| Joined: {{- join}} | Created: {{- creation}} | {{- tag}}"
		},
		"anti_raid_nuke": {
			"case_placeholder": "Preliminary",
			"title": "Anti-Raid-Nuke report for {{guild}}",
			"title_preliminary": "Preliminary Anti-Raid-Nuke report for {{guild}}",
			"summary": {
				"title": "**Summary**",
				"mode": "**Mode:** `{{mode}}`",
				"launch_time": "**Time of launch:** `{{- launch_time}}`",
				"time_taken": "**Time taken:** `{{time_taken}}`",
				"moderator": "**Moderator:** `{{- moderator}}`",
				"reason": "**Reason:** `{{- reason}}`",
				"preliminary": "This is a preliminary report. To launch the nuke, return to Discord.",
				"preliminary_hidden": "You can only view a preliminary report when executing the command in hidden mode."
			},
			"results": {
				"title": "**Results**",
				"total": "**Total:** `{{count}}`",
				"preliminary": {
					"banned_one": "`{{count}}` member can be banned",
					"banned_other": "`{{count}}` members can be banned",
					"failed_one": "`{{count}}` member cannot be banned",
					"failed_other": "`{{count}}` members cannot be banned"
				},
				"blast": {
					"banned_one": "`{{count}}` member was successfully banned",
					"banned_other": "`{{count}}` members were successfully banned",
					"failed_one": "`{{count}}` member failed to be banned",
					"failed_other": "`{{count}}` members failed to be banned"
				},
				"ratio": "Success rate: `{{ratio}}`"
			},
			"parameters": {
				"title": "**Parameters**",
				"avatar": "**Matching avatar:** `{{avatar}}`",
				"pattern": {
					"title": "**Pattern:** `{{- pattern}}`",
					"confusables": "Pattern confusables mode: `$t(formatters.anti_raid_nuke.parameters.confusables.{{mode}})`",
					"insensitive": "Pattern is case-insensitive",
					"full_match": "Pattern is restricted to full matches"
				},
				"confusables": {
					"title": "Confusables mode: `$t(formatters.anti_raid_nuke.parameters.confusables.{{mode}})`",
					"0": "Disabled",
					"1": "Pattern resistance only",
					"2": "Filtering members only",
					"3": "Filtering members and pattern resistance"
				},
				"created": {
					"title": "**Creation range:**",
					"after": "Created after: `{{- after}}`",
					"before": "Created before: `{{- before}}`"
				},
				"joined": {
					"title": "**Join range:**",
					"after": "Joined after: `{{- after}}`",
					"before": "Joined before: `{{- before}}`"
				},
				"file": {
					"title": "**File:** `{{- file}}`",
					"placeholder": "<CDN link>"
				},
				"days_zero": "Not deleting any messages",
				"days_one": "Deleting messages sent in the last day",
				"days_other": "Deleting messages sent in the last `{{count}}` days",
				"zalgo": "Filtering members with zalgo in their username",
				"none": "Not specified"
			},
			"cases": {
				"title": "**Cases**",
				"single": "Case `#{{case_id}}`",
				"range": "From case `#{{from}}` to case `#{{to}}`",
				"none": "No case created for this blast",
				"log_message": "**Case log:** {{- link}}",
				"log_message_sub": "Beam me up, Yuu",
				"log_message_none": "**Case log:** No case log created"
			},
			"preliminary": {
				"successes": {
					"title": "**Projected Hits**",
					"none": "No potential hits"
				},
				"fails": {
					"title": "**Projected Failures**",
					"none": "No early detectable failures"
				}
			},
			"blast": {
				"successes": {
					"title": "**Confirmed hits**",
					"none": "No confirmed hits, something went wrong"
				},
				"fails": {
					"title": "**Failures**",
					"none": "No failures, everything went fine"
				}
			},
			"table": {
				"success_titles": [
					"Case id",
					"Member id",
					"Username"
				],
				"fail_titles": [
					"Member id",
					"Username",
					"Error"
				]
			}
		},
		"report_log": {
			"author": "Reported by {{- author}}",
			"reason": "**Reason:**\n{{- reason}}",
			"target": "**Target:** {{- target}}",
			"message": "**Message:** {{- message_link}} ({{- channel}})",
			"message_sub": "Beam me up, Yuu",
			"case_reference": "**Case Reference:** {{- ref}}",
			"status": "**Status:** $t(log.report_log.report_status.{{status}})",
			"footer": "Report {{report_id}} | $t(log.report_log.report_type.{{type}})",
			"report_type": {
				"0": "Message",
				"1": "User"
			},
			"report_status": {
				"0": "Pending",
				"1": "Approved",
				"2": "Rejected",
				"3": "False"
			}
		}
	}
}